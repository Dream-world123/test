# Generated by Django 3.2.3 on 2021-06-11 10:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import gst_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address_Detail',
            fields=[
                ('id', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='Pin Code')),
                ('taluk', models.CharField(max_length=30)),
                ('district', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('country', models.CharField(max_length=30)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Address Detail',
                'db_table': 'address_detail',
            },
        ),
        migrations.CreateModel(
            name='Franchise_Detail',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='Franchise Code')),
                ('franchise_name', models.CharField(max_length=30, verbose_name='Franchise Name')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Franchise Detail',
                'db_table': 'franchise_detail',
            },
        ),
        migrations.CreateModel(
            name='Staff_Detail',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='Staff ID')),
                ('staff_name', models.CharField(max_length=30, verbose_name='Staff Name')),
                ('gender', models.CharField(choices=[('0', 'Female'), ('1', 'male')], max_length=11)),
                ('father_name', models.CharField(max_length=30, verbose_name='Father/Husband')),
                ('date_of_birth', models.DateField()),
                ('image', models.ImageField(upload_to='images/')),
                ('address', models.TextField()),
                ('village', models.CharField(max_length=30)),
                ('mobile_no', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(code='Invalid', regex='^[0-9]{10}$')], verbose_name='Mobile Number')),
                ('email', models.EmailField(max_length=50)),
                ('pancard', gst_field.modelfields.PANField(max_length=10)),
                ('pan_img', models.ImageField(upload_to='images/')),
                ('adhar', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(code='Invalid', regex='^[0-9]{12}$')], verbose_name='Adhar Card')),
                ('adhar_img', models.ImageField(upload_to='images/')),
                ('account_holder', models.CharField(max_length=20, verbose_name='Account Holder Name')),
                ('bank_name', models.CharField(max_length=20, verbose_name='Bank Name')),
                ('branch_name', models.CharField(max_length=20, verbose_name='Branch Name')),
                ('account_type', models.CharField(max_length=20, verbose_name='Account Type')),
                ('account_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(code='Invalid', regex='^[0-9]*$')], verbose_name='Account Number')),
                ('ifsc_code', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(code='Invalid', regex='^[A-Z]{4}0[A-Z0-9]{6}$')], verbose_name='IFSC Code')),
                ('bank_img', models.ImageField(upload_to='images/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('franchise_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='incentive.franchise_detail', verbose_name='Franchise Code')),
                ('introducer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='incentive.staff_detail', verbose_name='Introducer Id')),
                ('pincode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='incentive.address_detail', verbose_name='Pin Code')),
            ],
            options={
                'verbose_name': 'Staff Detail',
                'db_table': 'staff_detail',
            },
        ),
        migrations.CreateModel(
            name='Payment_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(max_length=20)),
                ('year', models.CharField(max_length=4)),
                ('date', models.DateField()),
                ('account_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(code='Invalid', regex='^[0-9]*$')], verbose_name='Account Number')),
                ('ifsc_code', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(code='Invalid', regex='^[A-Z]{4}0[A-Z0-9]{6}$')], verbose_name='IFSC Code')),
                ('amount', models.FloatField(default=0.0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='incentive.staff_detail', verbose_name='Staff ID')),
            ],
            options={
                'verbose_name': 'Payment Detail',
                'db_table': 'payment_detail',
            },
        ),
        migrations.CreateModel(
            name='Incentive_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(max_length=20)),
                ('year', models.CharField(max_length=4)),
                ('self_purchase', models.FloatField(default=0.0, verbose_name='Self Purchase')),
                ('purchase_amount', models.FloatField(default=0.0, verbose_name='Purchase Amount')),
                ('self_weightage', models.FloatField(default=0.0, verbose_name='Self Weightage')),
                ('team_weightage', models.FloatField(default=0.0, verbose_name='Team Weightage')),
                ('net_weightage', models.FloatField(default=0.0, verbose_name='Net Weightage')),
                ('self_point', models.FloatField(default=0.0, verbose_name='Self Point')),
                ('team_point', models.FloatField(default=0.0, verbose_name='Team Point')),
                ('net_points', models.FloatField(default=0.0, verbose_name='Net Points')),
                ('equal_share', models.FloatField(default=0.0, verbose_name='Equal Share')),
                ('travel_fund', models.FloatField(default=0.0, verbose_name='Travel Fund')),
                ('car_fund', models.FloatField(default=0.0, verbose_name='Car Fund')),
                ('home_fund', models.FloatField(default=0.0, verbose_name='Home Fund')),
                ('total_incentive', models.FloatField(default=0.0, verbose_name='Total Incentive')),
                ('welfare', models.FloatField(default=0.0, verbose_name='Welfare 1%')),
                ('tds', models.FloatField(default=0.0, verbose_name='TDS 5%')),
                ('net_incentive_payable', models.FloatField(default=0.0, verbose_name='Net Incentive Payable')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='incentive.staff_detail', verbose_name='Staff ID')),
            ],
            options={
                'verbose_name': 'Incentive Detail',
                'db_table': 'incentive_detail',
            },
        ),
        migrations.CreateModel(
            name='Designation_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(choices=[('Marketing Exicutive(ME)', 'Marketing Exicutive(ME)'), ('SR.Marketing Exicutive(SR.ME)', 'SR.Marketing Exicutive(SR.ME)'), ('Marketing Organizer(MO)', 'Marketing Organizer(MO)'), ('SR.Marketing Organizer(SR.MO)', 'SR.Marketing Organizer(SR.MO)'), ('Marketing Manager(MM)', 'Marketing Manager(MM)'), ('SR.Marketing Manager(SR.MM)', 'SR.Marketing Manager(SR.MM)'), ('Marketing Regional Manager(MRM)', 'Marketing Regional Manager(MRM)'), ('SR.Marketing Regional Manager(SR.MRM)', 'SR.Marketing Regional Manager(SR.MRM)'), ('Marketing Zonal Manager(MZM)', 'Marketing Zonal Manager(MZM)'), ('SR.Marketing Zonal Manager(SR.MZM)', 'SR.Marketing Zonal Manager(SR.MZM)'), ('Marketing Advisor(MA)', 'Marketing Advisor(MA)'), ('SR.Marketing Advisor(SR.MA)', 'SR.Marketing Advisor(SR.MA)'), ('SR.Marketing Advisor Group(SR.MAG)', 'SR.Marketing Advisor Group(SR.MAG)'), ('Director', 'Director')], max_length=40)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='incentive.staff_detail', verbose_name='Staff ID')),
            ],
            options={
                'verbose_name': 'Designation Detail',
                'db_table': 'designation_detail',
            },
        ),
    ]
